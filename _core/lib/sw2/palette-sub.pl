################## „ÉÅ„É£„ÉÉ„Éà„Éë„É¨„ÉÉ„ÉàÁî®„Çµ„Éñ„É´„Éº„ÉÅ„É≥ ##################
use strict;
#use warnings;
use utf8;

require $set::data_class;
require $set::data_items;
my @class_names;
foreach(@data::class_names){
  push(@class_names, $_);
  if($_ eq '„Ç≥„É≥„Ç∏„É£„É©„Éº'){ push(@class_names, '„Ç¶„Ç£„Ç∂„Éº„Éâ'); }
}

### È≠îÊ≥ïÂ®ÅÂäõ #########################################################################################
my %pows = (
  Sor => {
    10  =>  1,
    20  =>  3,
    30  =>  5,
    40  =>  8,
    50  => 11,
    60  => 14,
    100 => 15,
  },
  Con => {
    0   =>  1,
    20  =>  8,
    30  =>  9,
    60  => 15,
  },
  Wiz => {
    10  =>  8,
    20  =>  4,
    30  => 10,
    70  => 13,
  },
  Pri => {
    10  =>  3,
    20  =>  5,
    30  =>  9,
    50  => 11,
  },
  Mag => {
    30  =>  5,
    90  => 15,
  },
  Fai => {
    10  =>  2,
    20  =>  5,
    40  => 10,
    50  => 11,
    60  => 14
  },
  Dru => {
    10  =>  4,
    20  =>  4,
    30  => 13,
    50  => 15,
  },
  Dem => {
    10  =>  5,
    20  =>  2,
    30  => 15,
    40  =>  9,
    70  => 14,
  },
  Gri => {
    10  =>  1,
    20  =>  1,
    30  =>  4,
    40  =>  7,
    50  =>  7,
    60  => 10,
    80  => 13,
    100 => 13,
  },
  Bar => {
    10  =>  1,
    20  =>  5,
    30  => 10,
  },
);
if($::SW2_0){
  $pows{Dem} = {
    10  =>  1,
    20  =>  1,
    30  =>  5,
    40  =>  5,
    50  =>  5,
  };
}

my %heals = (
  Con => {
    0   =>  2,
    30  => 11,
  },
  Pri => {
    10  =>  2,
    30  =>  5,
    50  => 10,
    70  => 13,
  },
  Gri => {
    20  =>  1,
    40  =>  7,
    100 => 13,
  },
  Bar => {
    0   =>  1,
    10  =>  1,
    20  =>  1,
    30  =>  5,
    40  => 10,
  },
);

my $skill_mark = "[‚óã‚óØ„Äá‚ñ≥Ôºû‚ñ∂„ÄÜ‚òÜ‚â´¬ª‚ñ°‚òëüó®]|&gt;&gt;";

### „Éó„É™„Çª„ÉÉ„Éà #######################################################################################
sub palettePreset {
  my $tool = shift;
  my $type = shift;
  my $text;
  my %bot;
  if   (!$tool)           { $bot{YTC} = 1; }
  elsif($tool eq 'tekey' ){ $bot{TKY} = $bot{BCD} = 1; }
  elsif($tool eq 'bcdice'){ $bot{BCD} = 1; }
  ## Ôº∞Ôº£
  if(!$type){
    # Âü∫Êú¨Âà§ÂÆö
    $text .= "### ‚ñ†ÈùûÊà¶ÈóòÁ≥ª\n";
    $text .= "2d+{ÂÜíÈô∫ËÄÖ}+{Âô®Áî®B} ÂÜíÈô∫ËÄÖÔºãÂô®Áî®\n";
    $text .= "2d+{ÂÜíÈô∫ËÄÖ}+{ÊïèÊç∑B} ÂÜíÈô∫ËÄÖÔºãÊïèÊç∑\n";
    $text .= "2d+{ÂÜíÈô∫ËÄÖ}+{Á≠ãÂäõB} ÂÜíÈô∫ËÄÖÔºãÁ≠ãÂäõ\n";
    $text .= "2d+{ÂÜíÈô∫ËÄÖ}+{Áü•ÂäõB} ÂÜíÈô∫ËÄÖÔºãÁü•Âäõ\n";
    foreach my $class (@class_names){
      my $c_id = $data::class{$class}{id};
      next if !$data::class{$class}{package} || !$::pc{'lv'.$c_id};
      my %data = %{$data::class{$class}{package}};
      foreach my $p_id (sort{$data{$a}{stt} cmp $data{$b}{stt} || $data{$a} cmp $data{$b}} keys %data){
        my $name = $class.$data{$p_id}{name};
        $text .= "2d+{$name} $name\n";
        if($data{$p_id}{monsterLore} && $::pc{monsterLoreAdd}){ $text .= "2d+{$name}+$::pc{monsterLoreAdd} È≠îÁâ©Áü•Ë≠ò\n"; }
        if($data{$p_id}{initiative } && $::pc{initiativeAdd }){ $text .= "2d+{$name}+$::pc{initiativeAdd } ÂÖàÂà∂\n"; }
      }
    }
    $text .= "\n";
    
    # È≠îÊ≥ï
    foreach my $name (@class_names){
      next if !($data::class{$name}{magic}{jName} || $data::class{$name}{craft}{stt});
      next if !$::pc{'lv' . $data::class{$name}{id} };
      $text .= "###\n" if $bot{TKY};
      $text .= "### ‚ñ†È≠îÊ≥ïÁ≥ª\n";
      $text .= "//È≠îÂäõ‰øÆÊ≠£=".($::pc{magicPowerAdd}||0)."\n";
      $text .= "//Ë°å‰Ωø‰øÆÊ≠£=".($::pc{magicCastAdd}||0)."\n";
      $text .= "//È≠îÊ≥ïC=10\n";
      $text .= "//È≠îÊ≥ïD‰øÆÊ≠£=".($::pc{magicDamageAdd}||0)."\n";
      $text .= "//Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£=".($::pc{magicDamageAdd}||0)."\n" if $::pc{lvDru} || ($::pc{lvFai} && $::pc{fairyContractEarth});
      $text .= "//ÂõûÂæ©Èáè‰øÆÊ≠£=0\n" if $::pc{lvCon} || $::pc{lvPri} || $::pc{lvGri} || $::pc{lvBar} || $::pc{lvMag} >= 2;
      last;
    }

    foreach my $name (@class_names){
      next if !($data::class{$name}{magic}{jName} || $data::class{$name}{craft}{stt});
      my $id   = $data::class{$name}{id};
      my $name = $data::class{$name}{magic}{jName} || $data::class{$name}{craft}{jName};
      next if !$::pc{'lv'.$id};
      
      $text .= "2d+{$name}";
      if   ($name =~ /È≠î/){ $text .= "+{È≠îÂäõ‰øÆÊ≠£}+{Ë°å‰Ωø‰øÆÊ≠£} ${name}Ë°å‰Ωø\n"; }
      elsif($name =~ /Ê≠å/){ $text .= " Âë™Ê≠åÊºîÂ•è\n"; }
      else                { $text .= " ${name}\n"; }
      
      foreach my $pow (sort {$a <=> $b} keys %{$pows{$id}}) {
        next if($pows{$id}{$pow} > $::pc{'lv'.$id} && $id ne 'Fai');
        next if($id eq 'Wiz' && $pows{$id}{$pow} > min($::pc{lvSor},$::pc{lvCon}));
        next if($id eq 'Fai' && $pows{$id}{$pow} > fairyRank($::pc{lvFai},$::pc{fairyContractEarth},$::pc{fairyContractWater},$::pc{fairyContractFire },$::pc{fairyContractWind },$::pc{fairyContractLight},$::pc{fairyContractDark }));
        if($id eq 'Bar'){ $pow += $::pc{finaleEnhance} || 0; }
        $text .= "k${pow}[{È≠îÊ≥ïC}]+{$name}".($name =~ /È≠î/ ?'+{È≠îÂäõ‰øÆÊ≠£}':'').addNum($::pc{'magicDamageAdd'.$id})."+{È≠îÊ≥ïD‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏".($bot{BCD}?"Ôºè$name":"")."\n";
        if ($id eq 'Fai' && $::pc{fairyContractEarth} && ($pow == 10 || $pow == 50)) {
          $text .= "k${pow}[12]+{$name}" . ($name =~ /È≠î/ ?'+{È≠îÂäõ‰øÆÊ≠£}':'') . addNum($::pc{'magicDamageAdd'.$id}) . "+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏ÔºàÁâ©ÁêÜÔºâ" . ($bot{BCD}?"Ôºè$name":"")."\n";
        }
        if ($bot{YTC}) { $text .= "k${pow}[13]+{$name}" . ($name =~ /È≠î/ ?'+{È≠îÂäõ‰øÆÊ≠£}':'') . "//" . addNum($::pc{'magicDamageAdd'.$id}) . "+{È≠îÊ≥ïD‰øÆÊ≠£} ÂçäÊ∏õ\n"; }
        if ($bot{BCD}) { $text .= "k${pow}[13]+{$name}" . ($name =~ /È≠î/ ?'+{È≠îÂäõ‰øÆÊ≠£}':'') . "h+("  . ($::pc{'magicDamageAdd'.$id} || 0) . "+{È≠îÊ≥ïD‰øÆÊ≠£}) ÂçäÊ∏õÔºè${name}\n"; }
      }
      if($id eq 'Dru'){
        if($bot{YTC}){
          $text .= "k„Ç¶„É´„Éï„Éê„Ç§„Éà+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} Áâ©ÁêÜ„ÉÄ„É°„Éº„Ç∏\n"       if($::pc{lvDru} >=  1);
          $text .= "k„ÇΩ„Éº„É≥„Éê„ÉÉ„Ç∑„É•+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} Áâ©ÁêÜ„ÉÄ„É°„Éº„Ç∏\n"     if($::pc{lvDru} >=  3);
          $text .= "k„Ç≥„É≥„Ç∞„Çπ„Éû„ÉÉ„Ç∑„É•+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} Áâ©ÁêÜ„ÉÄ„É°„Éº„Ç∏\n"   if($::pc{lvDru} >=  7);
          $text .= "k„Éú„Ç¢„É©„ÉÉ„Ç∑„É•+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} Áâ©ÁêÜ„ÉÄ„É°„Éº„Ç∏\n"       if($::pc{lvDru} >=  9);
          $text .= "k„Éû„É´„Çµ„Éº„É¥„É©„Éó„É¨„Çπ+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} Áâ©ÁêÜ„ÉÄ„É°„Éº„Ç∏\n" if($::pc{lvDru} >= 10);
          $text .= "k„É´„Éä„Ç¢„Çø„ÉÉ„ÇØ+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} Áâ©ÁêÜ„ÉÄ„É°„Éº„Ç∏\n"       if($::pc{lvDru} >= 13);
          $text .= "k„ÉÄ„Éñ„É´„Çπ„Éà„É≥„Éó+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} Áâ©ÁêÜ„ÉÄ„É°„Éº„Ç∏\n"     if($::pc{lvDru} >= 15);
        }
        elsif ($bot{BCD}) {
          $text .= "Dru[0,3,6]+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏Ôºè„Äê„Ç¶„É´„Éï„Éê„Ç§„Éà„Äë\n"   if($::pc{lvDru} >=  1);
          $text .= "Dru[4,7,13]+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏Ôºè„Äê„ÇΩ„Éº„É≥„Éê„ÉÉ„Ç∑„É•„Äë\n"   if($::pc{lvDru} >=  3);
          $text .= "Dru[12,15,18]+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏Ôºè„Äê„Ç≥„É≥„Ç∞„Çπ„Éû„ÉÉ„Ç∑„É•„Äë\n" if($::pc{lvDru} >=  7);
          $text .= "Dru[13,16,19]+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏Ôºè„Äê„Éú„Ç¢„É©„ÉÉ„Ç∑„É•„Äë\n" if($::pc{lvDru} >=  9);
          $text .= "Dru[18,21,24]+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏Ôºè„Äê„Éû„É´„Çµ„Éº„É¥„É©„Éó„É¨„Çπ„Äë\n" if($::pc{lvDru} >= 10);
          $text .= "Dru[18,21,36]+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏Ôºè„Äê„É´„Éä„Ç¢„Çø„ÉÉ„ÇØ„Äë\n" if($::pc{lvDru} >= 13);
          $text .= "Dru[24,27,30]+{$name}+{È≠îÂäõ‰øÆÊ≠£}+{Áâ©ÁêÜÈ≠îÊ≥ïD‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏Ôºè„Äê„ÉÄ„Éñ„É´„Çπ„Éà„É≥„Éó„Äë\n" if($::pc{lvDru} >= 15);
        }
      }
      
      foreach my $pow (sort {$a <=> $b} keys %{$heals{$id}}) {
        next if($::pc{'lv'.$id} < $heals{$id}{$pow});
        $text .= "k${pow}[13]+{$name}".($name =~ /È≠î/ ?'+{È≠îÂäõ‰øÆÊ≠£}':'')."+{ÂõûÂæ©Èáè‰øÆÊ≠£} ÂõûÂæ©Èáè".($bot{BCD}?"Ôºè${name}":"")."\n"
      }
      $text .= "\n";
    }
    
    # ÊîªÊíÉ
    foreach (1 .. $::pc{weaponNum}){
      next if $::pc{'weapon'.$_.'Acc'}.$::pc{'weapon'.$_.'Rate'}.
              $::pc{'weapon'.$_.'Crit'}.$::pc{'weapon'.$_.'Dmg'} eq '';
      $text .= "###\n" if $bot{TKY};
      $text .= "### ‚ñ†Ê≠¶Âô®ÊîªÊíÉÁ≥ª\n";
      $text .= "//ÂëΩ‰∏≠‰øÆÊ≠£=0\n";
      $text .= "//C‰øÆÊ≠£=0\n";
      $text .= "//ËøΩÂä†D‰øÆÊ≠£=0\n";
      $text .= "//ÂøÖÊÆ∫ÂäπÊûú=0\n";
      $text .= "//„ÇØ„É™„É¨„Ç§=0\n";
      last;
    }
    
    foreach (1 .. $::pc{weaponNum}){
      if($::pc{'weapon'.$_.'Category'} eq '„Ç¨„É≥'){
        $text .= "//„Ç¨„É≥ËøΩÂä†D‰øÆÊ≠£=0\n";
        last;
      }
    }
    
    foreach (1 .. $::pc{weaponNum}){
      next if $::pc{'weapon'.$_.'Acc'}.$::pc{'weapon'.$_.'Rate'}.
              $::pc{'weapon'.$_.'Crit'}.$::pc{'weapon'.$_.'Dmg'} eq '';
      next if (
        $::pc{'weapon'.$_.'Name'}  eq $::pc{'weapon'.($_-1).'Name'}  &&
        $::pc{'weapon'.$_.'Usage'} eq $::pc{'weapon'.($_-1).'Usage'} &&
        $::pc{'weapon'.$_.'Acc'}   eq $::pc{'weapon'.($_-1).'Acc'}   &&
        $::pc{'weapon'.$_.'Rate'}  eq $::pc{'weapon'.($_-1).'Rate'}  &&
        $::pc{'weapon'.$_.'Crit'}  eq $::pc{'weapon'.($_-1).'Crit'}  &&
        $::pc{'weapon'.$_.'Dmg'}   eq $::pc{'weapon'.($_-1).'Dmg'}
      );
      
      $::pc{'weapon'.$_.'Name'} = $::pc{'weapon'.$_.'Name'} || $::pc{'weapon'.($_-1).'Name'};
      $text .= "2d+{ÂëΩ‰∏≠$_}+{ÂëΩ‰∏≠‰øÆÊ≠£}";
      $text .= " ÂëΩ‰∏≠ÂäõÔºè$::pc{'weapon'.$_.'Name'}$::pc{'weapon'.$_.'Usage'}\n";
      
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë¶|‚ûÜ/7/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ëß|‚ûá/8/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë®|‚ûà/9/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë©|‚ûâ/10/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë™/11/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë´/12/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë¨/13/;
      if($::pc{'weapon'.$_.'Category'} eq '„Ç¨„É≥'){
        my @power = (
          { lv =>  1, p => 20, c => '' },
          { lv =>  2, p => 20, c => -1 },
          { lv =>  6, p => 30, c => '' },
          { lv =>  7, p => 10, c => '' },
          { lv =>  9, p => 30, c => -1 },
          { lv => 12, p => 40, c => '', h => '2H' },
          { lv => 15, p => 70, c => '', h => '2H' },
        );
        foreach my $bullet (sort {$a->{p} <=> $b->{p}} @power){
          next if $::pc{lvMag} < $bullet->{lv};
          next if $bullet->{h} && $::pc{'weapon'.$_.'Usage'} !~ /$bullet->{h}/;
          $text .= "k$bullet->{p}\[";
          $text .= "(" if $bot{BCD};
          $text .= "$::pc{'weapon'.$_.'Crit'}$bullet->{c}";
          $text .= ")" if $bot{BCD};
          $text .= "\]+{ËøΩÂä†D$_}+{„Ç¨„É≥ËøΩÂä†D‰øÆÊ≠£}";
          $text .= " „ÉÄ„É°„Éº„Ç∏";
          $text .= "\n";
        }
        my @heal = (
          { lv =>  2, p =>  0 },
          { lv => 10, p => 30 },
          { lv => 13, p => 20, h => '2H' },
        );
        foreach my $bullet (sort {$a->{p} <=> $b->{p}} @heal){
          next if $::pc{lvMag} < $bullet->{lv};
          next if $bullet->{h} && $::pc{'weapon'.$_.'Usage'} !~ /$bullet->{h}/;
          $text .= "k$bullet->{p}\[";
          $text .= "13";
          $text .= "\]+{ËøΩÂä†D$_}+{ÂõûÂæ©Èáè‰øÆÊ≠£}";
          $text .= " ÂõûÂæ©Èáè";
          $text .= "\n";
        }
      }
      else {
        $text .= "k$::pc{'weapon'.$_.'Rate'}\[";
        $text .= "(" if $bot{BCD};
        $text .= "$::pc{'weapon'.$_.'Crit'}+{C‰øÆÊ≠£}";
        $text .= ")" if $bot{BCD};
        $text .= "\]+{ËøΩÂä†D$_}+{ËøΩÂä†D‰øÆÊ≠£}{Âá∫ÁõÆ‰øÆÊ≠£}";

        if($::pc{'weapon'.$_.'Name'} =~ /È¶ñÂàá/ || $::pc{'weapon'.$_.'Note'} =~ /È¶ñÂàá/){
          $text .= $bot{YTC} ? 'È¶ñÂàá' : $bot{BCD} ? 'r5' : '';
        }
        $text .= " „ÉÄ„É°„Éº„Ç∏";
        $text .= "Ôºè$::pc{'weapon'.$_.'Name'}$::pc{'weapon'.$_.'Usage'}" if $bot{BCD};
        $text .= "\n";
      }
      
      $text .= "\n";
    }
    $text .= "//Âá∫ÁõÆ‰øÆÊ≠£=\$+{„ÇØ„É™„É¨„Ç§}\#{ÂøÖÊÆ∫ÂäπÊûú}\n" if $text =~ /‚ñ†Ê≠¶Âô®ÊîªÊíÉÁ≥ª/;
    # ÊäµÊäóÂõûÈÅø
    $text .= "###\n" if $bot{TKY};
    $text .= "### ‚ñ†ÊäµÊäóÂõûÈÅø\n";
    $text .= "//ÁîüÂëΩÊäµÊäó‰øÆÊ≠£=0\n";
    $text .= "//Á≤æÁ•ûÊäµÊäó‰øÆÊ≠£=0\n";
    $text .= "//ÂõûÈÅø‰øÆÊ≠£=0\n";
    $text .= "2d+{ÁîüÂëΩÊäµÊäó}+{ÁîüÂëΩÊäµÊäó‰øÆÊ≠£} ÁîüÂëΩÊäµÊäóÂäõ\n";
    $text .= "2d+{Á≤æÁ•ûÊäµÊäó}+{Á≤æÁ•ûÊäµÊäó‰øÆÊ≠£} Á≤æÁ•ûÊäµÊäóÂäõ\n";
    foreach my $i (1..3){
      my $hasChecked = 0;
      foreach my $j (1..$::pc{armourNum}){
        $hasChecked++ if($::pc{"defTotal${i}CheckArmour${j}"});
      }
      next if !$hasChecked;

      $text .= "2d+{ÂõûÈÅø${i}}+{ÂõûÈÅø‰øÆÊ≠£} ÂõûÈÅøÂäõ".($::pc{"defenseTotal${i}Note"}?"Ôºè$::pc{'defenseTotal'.$i.'Note'}":'')."\n";
    }
    
    #
    $text .= "###\n" if $bot{YTC} || $bot{TKY};
  }
  ## È≠îÁâ©
  elsif($type eq 'm') {
    $text .= "//ÁîüÂëΩÊäµÊäó‰øÆÊ≠£=0\n";
    $text .= "//Á≤æÁ•ûÊäµÊäó‰øÆÊ≠£=0\n";
    $text .= "//ÂõûÈÅø‰øÆÊ≠£=0\n";
    $text .= "2d+{ÁîüÂëΩÊäµÊäó}+{ÁîüÂëΩÊäµÊäó‰øÆÊ≠£} ÁîüÂëΩÊäµÊäóÂäõ\n";
    $text .= "2d+{Á≤æÁ•ûÊäµÊäó}+{Á≤æÁ•ûÊäµÊäó‰øÆÊ≠£} Á≤æÁ•ûÊäµÊäóÂäõ\n";
    foreach (1 .. $::pc{statusNum}){
      (my $part   = $::pc{'status'.$_.'Style'}) =~ s/^.+?[Ôºà(](.+?)[)Ôºâ]$/$1/;
      $text .= "2d+{ÂõûÈÅø$_}+{ÂõûÈÅø‰øÆÊ≠£} ÂõûÈÅøÔºè".$part."\n" if $::pc{'status'.$_.'Evasion'} ne '';
    }
    $text .= "\n";

    $text .= "//ÂëΩ‰∏≠‰øÆÊ≠£=0\n";
    $text .= "//ÊâìÊíÉ‰øÆÊ≠£=0\n";
    foreach (1 .. $::pc{statusNum}){
      (my $part   = $::pc{'status'.$_.'Style'}) =~ s/^.+?[Ôºà(](.+?)[)Ôºâ]$/$1/;
      (my $weapon = $::pc{'status'.$_.'Style'}) =~ s/^(.+?)[Ôºà(].+?[)Ôºâ]$/$1/;
      if($part ne $weapon){ $weapon = $::pc{'status'.$_.'Style'}; }
      $text .= "2d+{ÂëΩ‰∏≠$_}+{ÂëΩ‰∏≠‰øÆÊ≠£} ÂëΩ‰∏≠ÂäõÔºè$weapon\n" if $::pc{'status'.$_.'Accuracy'} ne '';
      $text .= "{„ÉÄ„É°„Éº„Ç∏$_}+{ÊâìÊíÉ‰øÆÊ≠£} „ÉÄ„É°„Éº„Ç∏Ôºè".$weapon."\n" if $::pc{'status'.$_.'Damage'} ne '';
      $text .= "\n";
    }
    my $skills = $::pc{skills};
    $skills =~ tr/Ôºê-ÔºôÔºàÔºâ/0-9\(\)/;
    $skills =~ s/\|/ÔΩú/g;
    $skills =~ s/<br>/\n/gi;
    $skills =~ s/^
      (?:$skill_mark)+
      (?<name>.+?)
      (?: [0-9]+(?:„É¨„Éô„É´|LV)|\(.+\) )*
      [\/Ôºè]
      (?:È≠îÂäõ)
      ([0-9]+)
      [(Ôºà][0-9]+[Ôºâ)]
      /$text .= "2d+{$+{name}} $+{name}\n\n";/megix;
    
    $skills =~ s/^
      (?<head>
        (?<mark>(?:$skill_mark)+)
        (?<name>.+)
        [\/Ôºè]
        (
          (?<dice>(?<base>[0-9]+)  [(Ôºà]  (?<fix>[0-9]+)  [Ôºâ)]  )
          |
          (?<fix>[0-9]+)
        )
        (?<other>.+?)
      )
      \s
      (?<note>[\s\S]*?)
      (?=^$skill_mark|^‚óè|\z)
      /
      $text .= convertMark($+{mark})."$+{name}Ôºè$+{fix}$+{other}\n"
            .($+{base} ne '' ?"2d+{$+{name}} ".convertMark($+{mark})."$+{name}$+{other}\n":'')
            .skillNote($+{head},$+{name},$+{note})."\n";
      /megix;
  }
  
  return $text;

  sub skillNote {
    my $head = shift;
    my $name = shift;
    my $note = shift;
    my $half = ($head =~ /ÂçäÊ∏õ/ ? 1 : 0);
    $note =~ tr#ÔºãÔºç√ó√∑#+\-*/#;
    my $out;
    $note =~ s/„Äå?(?<dice>[0-9]+[DÔº§][0-9]*[+\-*\/()0-9]*)„Äç?ÁÇπ„ÅÆ(?<elm>.+Â±ûÊÄß)?„ÅÆ?(?<dmg>Áâ©ÁêÜ|È≠îÊ≥ï|ËêΩ‰∏ã|Á¢∫ÂÆö)?„ÉÄ„É°„Éº„Ç∏/$out .= "{${name}„ÉÄ„É°„Éº„Ç∏} $+{elm}$+{dmg}„ÉÄ„É°„Éº„Ç∏\n".($half?"{${name}„ÉÄ„É°„Éº„Ç∏}\/\/2 $+{elm}$+{dmg}„ÉÄ„É°„Éº„Ç∏ÔºàÂçäÊ∏õÔºâ\n":'');/smegi if $bot{YTC};
    $note =~ s/„Äå?(?<dice>[0-9]+[DÔº§][0-9]*[+\-*\/()0-9]*)„Äç?ÁÇπ„ÅÆ(?<elm>.+Â±ûÊÄß)?„ÅÆ?(?<dmg>Áâ©ÁêÜ|È≠îÊ≥ï|ËêΩ‰∏ã|Á¢∫ÂÆö)?„ÉÄ„É°„Éº„Ç∏/$out .= "{${name}„ÉÄ„É°„Éº„Ç∏} $+{elm}$+{dmg}„ÉÄ„É°„Éº„Ç∏Ôºè${name}\n".($half?"({${name}„ÉÄ„É°„Éº„Ç∏})\/2U $+{elm}$+{dmg}„ÉÄ„É°„Éº„Ç∏ÔºàÂçäÊ∏õÔºâÔºè${name}\n":'');/smegi if $bot{BCD};
    return $out;
  }
  sub convertMark {
    my $text = shift;
    return $text if $bot{BCD}; #BCD„ÅØÂ§âÊèõ„Åó„Å™„ÅÑ
    if($::SW2_0){
      $text =~ s{[‚óã‚óØ„Äá]}{[Â∏∏]}gi;
      $text =~ s{[Ôºû‚ñ∂„ÄÜ]}{[‰∏ª]}gi;
      $text =~ s{[‚òÜ‚â´¬ª]|&gt;&gt;}{[Ë£ú]}gi;
      $text =~ s{[‚ñ°‚òëüó®]}{[ÂÆ£]}gi;
      $text =~ s{[‚ñΩ]}{‚ñΩ}gi;
      $text =~ s{[‚ñº]}{‚ñº}gi;
    } else {
      $text =~ s{[‚óã‚óØ„Äá]}{[Â∏∏]}gi;
      $text =~ s{[‚ñ≥]}{[Ê∫ñ]}gi;
      $text =~ s{[Ôºû‚ñ∂„ÄÜ]}{[‰∏ª]}gi;
      $text =~ s{[‚òÜ‚â´¬ª]|&gt;&gt;}{[Ë£ú]}gi;
      $text =~ s{[‚ñ°‚òëüó®]}{[ÂÆ£]}gi;
    }
    
    return $text;
  }
}
### „Éó„É™„Çª„ÉÉ„ÉàÔºà„Ç∑„É≥„Éó„É´Ôºâ ###########################################################################
sub palettePresetSimple {
  my $tool = shift;
  my $type = shift;
  
  my $text = palettePreset($tool,$type);
  my %propaty;
  foreach (paletteProperties($tool,$type)){
    if($_ =~ /^\/\/(.+?)=(.*)$/){
      $propaty{$1} = $2;
    }
  }
  my $hit = 1;
  while ($hit){
    $hit = 0;
    foreach(keys %propaty){
      if($text =~ s/\Q{$_}\E/$propaty{$_}/i){ $hit = 1 }
    }
  }
  1 while $text =~ s/(?<![0-9])\([+\-*0-9]+\)/s_eval($&)/egi;
  $text =~ s/[0-9]+\/6/int s_eval($&)/egi;
  1 while $text =~ s/(?<![0-9])\([+\-*0-9]+\)/s_eval($&)/egi;
  
  return $text;
}

### „Éá„Éï„Ç©„É´„ÉàÂ§âÊï∞ ###################################################################################
my %stt_id_to_name = (
  A => 'Âô®Áî®',
  B => 'ÊïèÊç∑',
  C => 'Á≠ãÂäõ',
  D => 'ÁîüÂëΩ',
  E => 'Áü•Âäõ',
  F => 'Á≤æÁ•û',
);
sub paletteProperties {
  my $tool = shift;
  my $type = shift;
  my @propaties;
  ## PC
  if  (!$type){
    push @propaties, "### ‚ñ†ËÉΩÂäõÂÄ§";
    push @propaties, "//Âô®Áî®Â∫¶=$::pc{sttDex}".addNum($::pc{sttAddA});
    push @propaties, "//ÊïèÊç∑Â∫¶=$::pc{sttAgi}".addNum($::pc{sttAddB});
    push @propaties, "//Á≠ãÂäõ=$::pc{sttStr}"  .addNum($::pc{sttAddC});
    push @propaties, "//ÁîüÂëΩÂäõ=$::pc{sttVit}".addNum($::pc{sttAddD});
    push @propaties, "//Áü•Âäõ=$::pc{sttInt}"  .addNum($::pc{sttAddE});
    push @propaties, "//Á≤æÁ•ûÂäõ=$::pc{sttMnd}".addNum($::pc{sttAddF});
    push @propaties, "###" if $tool eq 'tekey';
    push @propaties, "### ‚ñ†ÊäÄËÉΩ„É¨„Éô„É´";
    push @propaties, "//ÂÜíÈô∫ËÄÖ„É¨„Éô„É´=$::pc{level}";
    my @classes_en;
    foreach my $name (@class_names){
      my $id = $data::class{$name}{id};
      next if !$::pc{'lv'.$id};
      push @propaties, "//$name=$::pc{'lv'.$id}";
      push @classes_en, "//".uc($id)."={$name}";
    }
    foreach my $num (1..($::pc{commonClassNum}||10)){
      my $name = tagDelete tagUnescape $::pc{'commonClass'.$num};
      $name =~ s/[(Ôºà].+?[Ôºâ)]$//;
      push @propaties, "//$name=$::pc{'lvCommon'.$num}" if $name;
    }
    push @propaties, '';
    push @propaties, "###" if $tool eq 'tekey';
    push @propaties, "### ‚ñ†‰ª£ÂÖ•„Éë„É©„É°„Éº„Çø";
    push @propaties, "//Âô®Áî®={Âô®Áî®Â∫¶}";
    push @propaties, "//ÊïèÊç∑={ÊïèÊç∑Â∫¶}";
    push @propaties, "//ÁîüÂëΩ={ÁîüÂëΩÂäõ}";
    push @propaties, "//Á≤æÁ•û={Á≤æÁ•ûÂäõ}";
    push @propaties, "//Âô®Áî®B=(({Âô®Áî®})/6)";
    push @propaties, "//ÊïèÊç∑B=(({ÊïèÊç∑})/6)";
    push @propaties, "//Á≠ãÂäõB=(({Á≠ãÂäõ})/6)";
    push @propaties, "//ÁîüÂëΩB=(({ÁîüÂëΩ})/6)";
    push @propaties, "//Áü•ÂäõB=(({Áü•Âäõ})/6)";
    push @propaties, "//Á≤æÁ•ûB=(({Á≤æÁ•û})/6)";
    push @propaties, "//DEX={Âô®Áî®}";
    push @propaties, "//AGI={ÊïèÊç∑}";
    push @propaties, "//STR={Á≠ãÂäõ}";
    push @propaties, "//VIT={ÁîüÂëΩ}";
    push @propaties, "//INT={Áü•Âäõ}";
    push @propaties, "//MND={Á≤æÁ•û}";
    push @propaties, "//dexB={Âô®Áî®B}";
    push @propaties, "//agiB={ÊïèÊç∑B}";
    push @propaties, "//strB={Á≠ãÂäõB}";
    push @propaties, "//vitB={ÁîüÂëΩB}";
    push @propaties, "//intB={Áü•ÂäõB}";
    push @propaties, "//mndB={Á≤æÁ•ûB}";
    push @propaties, @classes_en;
    push @propaties, '';
    push @propaties, "//ÁîüÂëΩÊäµÊäó=({ÂÜíÈô∫ËÄÖ}+{ÁîüÂëΩB})".($::pc{vitResistAddTotal}?"+$::pc{vitResistAddTotal}":"");
    push @propaties, "//Á≤æÁ•ûÊäµÊäó=({ÂÜíÈô∫ËÄÖ}+{Á≤æÁ•ûB})".($::pc{mndResistAddTotal}?"+$::pc{mndResistAddTotal}":"");
    push @propaties, "//ÊúÄÂ§ßHP=$::pc{hpTotal}";
    push @propaties, "//ÊúÄÂ§ßMP=$::pc{mpTotal}";
    push @propaties, '';
    push @propaties, "//ÂÜíÈô∫ËÄÖ={ÂÜíÈô∫ËÄÖ„É¨„Éô„É´}";
    push @propaties, "//LV={ÂÜíÈô∫ËÄÖ}";
    push @propaties, '';
    #push @propaties, "//È≠îÁâ©Áü•Ë≠ò=$::pc{monsterLore}" if $::pc{monsterLore};
    #push @propaties, "//ÂÖàÂà∂Âäõ=$::pc{initiative}" if $::pc{initiative};
    foreach my $class (@class_names){
      my $c_id = $data::class{$class}{id};
      next if !$data::class{$class}{package} || !$::pc{'lv'.$c_id};
      my %data = %{$data::class{$class}{package}};
      foreach my $p_id (sort{$data{$a}{stt} cmp $data{$b}{stt} || $data{$a} cmp $data{$b}} keys %data){
        my $name = $class.$data{$p_id}{name};
        my $stt  = $stt_id_to_name{$data{$p_id}{stt}};
        my $add  = $::pc{'pack'.$c_id.$p_id.'Add'} + $::pc{'pack'.$c_id.$p_id.'Auto'};
        push @propaties, "//$name=\{$class\}+\{${stt}B\}".addNum($add);
      }
    }
    push @propaties, '';
    
    foreach my $name (@class_names){
      next if !($data::class{$name}{magic}{jName} || $data::class{$name}{craft}{stt});
      my $id = $data::class{$name}{id};
      next if !$::pc{'lv'.$id};
      my $magic = $data::class{$name}{magic}{jName} || $data::class{$name}{craft}{jName};
      my $stt = $data::class{$name}{craft}{stt} || 'Áü•Âäõ';
      my $own = $::pc{'magicPowerOwn'.$id} ? "+2" : "";
      my $add;
      if($data::class{$name}{magic}{jName}){
        $add .= addNum $::pc{magicPowerEnhance};
        $add .= addNum $::pc{'magicPowerAdd'.$id};
        $add .= addNum $::pc{raceAbilityMagicPower};
        $add .= addNum $::pc{'raceAbilityMagicPower'.$id};
      }
      elsif($id eq 'Alc') {
        $add .= addNum($::pc{alchemyEnhance});
      }
      push @propaties, "//".$magic."=({".$name."}+({".$stt."}".$own.")/6)".$add;
    }
    push @propaties, '';
    
    foreach (1 .. $::pc{weaponNum}){
      next if $::pc{'weapon'.$_.'Name'}.$::pc{'weapon'.$_.'Usage'}.$::pc{'weapon'.$_.'Reqd'}.
              $::pc{'weapon'.$_.'Acc'}.$::pc{'weapon'.$_.'Rate'}.$::pc{'weapon'.$_.'Crit'}.
              $::pc{'weapon'.$_.'Dmg'}.$::pc{'weapon'.$_.'Own'}.$::pc{'weapon'.$_.'Note'}
              eq '';
      $::pc{'weapon'.$_.'Name'} = $::pc{'weapon'.$_.'Name'} || $::pc{'weapon'.($_-1).'Name'};
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë¶|‚ûÜ/7/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ëß|‚ûá/8/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë®|‚ûà/9/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë©|‚ûâ/10/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë™/11/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë´/12/;
      $::pc{'weapon'.$_.'Crit'} =~ s/‚ë¨/13/;

      push @propaties, "//Ê≠¶Âô®$_=$::pc{'weapon'.$_.'Name'}";

      if(!$::pc{'weapon'.$_.'Class'} || $::pc{'weapon'.$_.'Class'} eq 'Ëá™ÂãïË®àÁÆó„Åó„Å™„ÅÑ'){ push @propaties, "//ÂëΩ‰∏≠$_=$::pc{'weapon'.$_.'Acc'}"; }
      else { push @propaties, "//ÂëΩ‰∏≠$_=({$::pc{'weapon'.$_.'Class'}}+({Âô®Áî®}".($::pc{'weapon'.$_.'Own'}?"+2":"").")/6+".(($::pc{'weapon'.$_.'Acc'}||0) + $::pc{accuracyEnhance}).")"; }

      push @propaties, "//Â®ÅÂäõ$_=$::pc{'weapon'.$_.'Rate'}";
      push @propaties, "//CÂÄ§$_=$::pc{'weapon'.$_.'Crit'}";

      if(!$::pc{'weapon'.$_.'Class'} || $::pc{'weapon'.$_.'Class'} eq 'Ëá™ÂãïË®àÁÆó„Åó„Å™„ÅÑ'){ push @propaties, "//ËøΩÂä†D$_=$::pc{'weapon'.$_.'Dmg'}"; }
      else {
        my $basetext;
        if   ($::pc{'weapon'.$_.'Category'} eq '„ÇØ„É≠„Çπ„Éú„Ç¶'){ $basetext = "{$::pc{'weapon'.$_.'Class'}}"; }
        elsif($::pc{'weapon'.$_.'Category'} eq '„Ç¨„É≥'      ){ $basetext = "{È≠îÂãïÊ©üË°ì}"; }
        else { $basetext = "{$::pc{'weapon'.$_.'Class'}}+({Á≠ãÂäõ})/6"; }
        my $mastery = $::pc{'mastery' . ucfirst($data::weapon_id{ $::pc{'weapon'.$_.'Category'} }) };
           $basetext .= addNum($mastery);
        push @propaties, "//ËøΩÂä†D$_=(${basetext}+".($::pc{'weapon'.$_.'Dmg'}||0).")";
      }

      push @propaties, '';
    }
    
    foreach my $i (1..3){
      next if ($::pc{"defenseTotal${i}Eva"} eq '');

      my $armorTotal = 0;
      my $own_agi;
      my $hasChecked = 0;
      foreach my $j (1..$::pc{armourNum}){
        if($::pc{"defTotal${i}CheckArmour${j}"}){
          $armorTotal += $::pc{"armour${j}Eva"};
          $own_agi = $::pc{"armour${j}Category"} eq 'Áõæ' && $::pc{"armour${j}Own"} ? '+2' : '';
          $hasChecked++;
        }
      }
      next if !$hasChecked;

      push @propaties, "//ÂõûÈÅø${i}=("
        .($::pc{evasionClass} ? "{$::pc{evasionClass}}+({ÊïèÊç∑}${own_agi})/6+" : '')
        .($::pc{evasiveManeuver} + $armorTotal)
        .")";
    }
    push @propaties, "//Èò≤Ë≠∑1=".($::pc{defenseTotal1Def} || $::pc{defenseTotalAllDef} || 0);
    push @propaties, "//Èò≤Ë≠∑2=$::pc{defenseTotal2Def}" if $::pc{defenseTotal2Def} ne '';
    push @propaties, "//Èò≤Ë≠∑3=$::pc{defenseTotal3Def}" if $::pc{defenseTotal3Def} ne '';
    
  }
  ## È≠îÁâ©
  elsif($type eq 'm') {
    push @propaties, "### ‚ñ†„Éë„É©„É°„Éº„Çø";
    push @propaties, "//LV=$::pc{lv}";
    push @propaties, '';
    if($::pc{mount}){
        if($::pc{lv}){
          my $i = ($::pc{lv} - $::pc{lvMin} +1);
          my $num = $i > 1 ? "1-$i" : '1';
          push @propaties, "//ÁîüÂëΩÊäµÊäó=$::pc{'status'.$num.'Vit'}";
          push @propaties, "//Á≤æÁ•ûÊäµÊäó=$::pc{'status'.$num.'Mnd'}";
        }
    }
    else {
      push @propaties, "//ÁîüÂëΩÊäµÊäó=$::pc{vitResist}";
      push @propaties, "//Á≤æÁ•ûÊäµÊäó=$::pc{mndResist}";
    }
    
    push @propaties, '';
    foreach (1 .. $::pc{statusNum}){
      my $num = $_;
      if($::pc{mount}){
        if($::pc{lv}){
          my $i = ($::pc{lv} - $::pc{lvMin} +1);
          $_ .= $i > 1 ? "-$i" : '';
        }
      }
      push @propaties, "//ÈÉ®‰Ωç$num=$::pc{'status'.$num.'Style'}";
      push @propaties, "//ÂëΩ‰∏≠$num=$::pc{'status'.$_.'Accuracy'}" if $::pc{'status'.$_.'Accuracy'} ne '';
      push @propaties, "//„ÉÄ„É°„Éº„Ç∏$num=$::pc{'status'.$_.'Damage'}" if $::pc{'status'.$_.'Damage'} ne '';
      push @propaties, "//ÂõûÈÅø$num=$::pc{'status'.$_.'Evasion'}" if $::pc{'status'.$_.'Evasion'} ne '';
      push @propaties, '';
    }
    my $skills = $::pc{skills};
    $skills =~ tr/Ôºê-ÔºôÔºàÔºâ/0-9\(\)/;
    $skills =~ s/\|/ÔΩú/g;
    $skills =~ s/<br>/\n/g;
    $skills =~ s/^(?:$skill_mark)+(.+?)(?:[0-9]+(?:„É¨„Éô„É´|LV)|\(.+\))*[\/Ôºè](?:È≠îÂäõ)([0-9]+)[(Ôºà][0-9]+[Ôºâ)]/push @propaties, "\/\/$1=$2";/megi;

    $skills =~ s/^
      (?<head>
        (?:$skill_mark)+
        (?<name>.+)
        [\/Ôºè]
        (
          (?<dice> (?<value>[0-9]+)  [(Ôºà]  [0-9]+  [Ôºâ)]  )
          |
          [0-9]+
        )
      .+?)
      \s
      (?<note>[\s\S]*?)
      (?=^$skill_mark|^‚óè|\z)
      /push @propaties, "\/\/$+{name}=$+{value}";push @propaties, skillNoteP($+{name},$+{note});/megix;
  }
  
  return @propaties;

  sub skillNoteP {
    my $name = shift;
    my $note = shift;
    $note =~ tr#ÔºãÔºç√ó√∑#+\-*/#;
    my $out;
    $note =~ s/„Äå?(?<dice>[0-9]+[DÔº§][0-9]*[+\-*\/()0-9]*)„Äç?ÁÇπ„ÅÆ(?<elm>.+Â±ûÊÄß)?„ÅÆ?(?<dmg>Áâ©ÁêÜ|È≠îÊ≥ï|ËêΩ‰∏ã|Á¢∫ÂÆö)?„ÉÄ„É°„Éº„Ç∏/$out .= "\/\/${name}„ÉÄ„É°„Éº„Ç∏=$+{dice}\n";/egi;
    return $out;
  }
}

1;